// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.taskmanager.domain;

import com.taskmanager.domain.TaskDetail;
import com.taskmanager.domain.UserDetail;
import java.math.BigInteger;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect TaskDetail_Roo_Finder {
    
    public static TypedQuery<TaskDetail> TaskDetail.findTaskDetailsByAssignBy(UserDetail assignBy) {
        if (assignBy == null) throw new IllegalArgumentException("The assignBy argument is required");
        EntityManager em = TaskDetail.entityManager();
        TypedQuery<TaskDetail> q = em.createQuery("SELECT o FROM TaskDetail AS o WHERE o.assignBy = :assignBy", TaskDetail.class);
        q.setParameter("assignBy", assignBy);
        return q;
    }
    
    public static TypedQuery<TaskDetail> TaskDetail.findTaskDetailsByAssignTo(UserDetail assignTo) {
        if (assignTo == null) throw new IllegalArgumentException("The assignTo argument is required");
        EntityManager em = TaskDetail.entityManager();
        TypedQuery<TaskDetail> q = em.createQuery("SELECT o FROM TaskDetail AS o WHERE o.assignTo = :assignTo", TaskDetail.class);
        q.setParameter("assignTo", assignTo);
        return q;
    }
    
    public static TypedQuery<TaskDetail> TaskDetail.findTaskDetailsByRootTaskId(BigInteger rootTaskId) {
        if (rootTaskId == null) throw new IllegalArgumentException("The rootTaskId argument is required");
        EntityManager em = TaskDetail.entityManager();
        TypedQuery<TaskDetail> q = em.createQuery("SELECT o FROM TaskDetail AS o WHERE o.rootTaskId = :rootTaskId", TaskDetail.class);
        q.setParameter("rootTaskId", rootTaskId);
        return q;
    }
    
}
